{"version":3,"sources":["components/layout/Navbar.js","utils/animatedQuestions.js","components/layout/Landing.js","components/layout/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","logo","color","alignItems","beta","fontSize","Navbar","classes","className","root","AppBar","position","style","boxShadow","Toolbar","Box","display","Typography","variant","questions","animatedType","Landing","steps","loop","Infinity","wrapper","justifyContent","bottom","width","borderTop","marginTop","spacing","padding","boxSizing","Copyright","Date","getFullYear","Footer","backgroundColor","minHeight","flexDirection","textAlign","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAOMA,EAAYC,KAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,MAAO,QACPC,WAAY,YAEhBC,KAAM,CACFC,SAAU,QAoBHC,EAhBA,WACX,IAAMC,EAAUT,IAChB,OACI,qBAAKU,UAAWD,EAAQE,KAAxB,SACI,cAACC,EAAA,EAAD,CAAQC,SAAU,SAAUT,MAAO,cAAeU,MAAO,CAACC,UAAW,QAArE,SACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAKC,QAAS,OAAQR,UAAWD,EAAQN,KAAzC,UACI,cAACgB,EAAA,EAAD,CAAYC,QAAS,KAArB,kBACA,cAACD,EAAA,EAAD,CAAYC,QAAS,UAAWV,UAAWD,EAAQH,KAAnD,gC,QCTTe,EAbG,CACd,yCACA,IACA,8DACA,IACA,iDACA,IACA,oEACA,IACA,mCACA,KCNErB,EAAYC,IAAW,CACzBU,KAAM,CACFP,MAAO,QACPC,WAAY,YAEhBiB,aAAc,CACVf,SAAU,MAmBHgB,EAfC,WACZ,IAAMd,EAAUT,IAChB,OACI,sBAAKU,UAAWD,EAAQE,KAAxB,UACI,cAACQ,EAAA,EAAD,CAAYC,QAAS,KAArB,gCACA,cAAC,IAAD,CACII,MAAOH,EACPI,KAAMC,IACNC,QAAS,IACTjB,UAAWD,EAAQa,mBCtB7BtB,EAAYC,KAAW,SAAAC,GAAK,MAAK,CACnCS,KAAM,CAEFO,QAAS,OACTU,eAAgB,eAChBf,SAAU,WACVgB,OAAQ,EACRC,MAAO,OACPC,UAAW,sBACXC,UAAW9B,EAAM+B,QAAQ,GACzBC,QAAS,GACTC,UAAW,aACX/B,MAAO,aAIf,SAASgC,IACL,OACI,eAACjB,EAAA,EAAD,CAAYC,QAAQ,QAApB,UACK,SAAM,IAAIiB,MAAOC,cAAe,IADrC,uBAOR,IAWeC,EAXA,WACX,IAAM9B,EAAUT,IAEhB,OACI,yBAAQU,UAAWD,EAAQE,KAA3B,UACI,cAACQ,EAAA,EAAD,iCACA,cAACiB,EAAD,QC5BNpC,EAAYC,KAAW,SAAAC,GAAK,MAAK,CACnCS,KAAM,CACF6B,gBAAiB,UACjBtB,QAAS,OACTuB,UAAW,QACXC,cAAe,SACfC,UAAW,cAuBJC,MAnBf,WACI,IAAMnC,EAAUT,IAChB,OACI,sBAAKU,UAAWD,EAAQE,KAAxB,UACI,2BAMA,oCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,WClBDkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b36b3541.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    logo: {\r\n        color: \"white\",\r\n        alignItems: \"baseline\"\r\n    },\r\n    beta: {\r\n        fontSize: 10\r\n    }\r\n}));\r\n\r\nconst Navbar = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position={\"sticky\"} color={\"transparent\"} style={{boxShadow: 'none'}}>\r\n                <Toolbar>\r\n                    <Box display={\"flex\"} className={classes.logo}>\r\n                        <Typography variant={\"h4\"}> UQ </Typography>\r\n                        <Typography variant={\"caption\"} className={classes.beta}> (Beta) </Typography>\r\n                    </Box>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","/*\r\n    A list of the questions shown on the landing page. To be used with the React Typical package.\r\n */\r\nconst questions = [\r\n    \"Should Amazon and Google be broken up?\",\r\n    1000,\r\n    \"Do you think abortion should be legal in the United States?\",\r\n    1000,\r\n    \"Should Spotify regulate the Joe Rogan Podcast?\",\r\n    1000,\r\n    \"Do you want cryptocurrencies to overhaul the US financial system?\",\r\n    1000,\r\n    \"Is Kanye West crazy or a genius?\",\r\n    1000\r\n];\r\n\r\nexport default questions;\r\n","import React from \"react\";\r\n\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Typical from 'react-typical';\r\nimport questions from '../../utils/animatedQuestions';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        color: \"white\",\r\n        alignItems: \"baseline\"\r\n    },\r\n    animatedType: {\r\n        fontSize: 25\r\n    }\r\n});\r\n\r\nconst Landing = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography variant={\"h3\"}>Uncommon Questions</Typography>\r\n            <Typical\r\n                steps={questions}\r\n                loop={Infinity}\r\n                wrapper={\"p\"}\r\n                className={classes.animatedType}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Landing;\r\n","import React from 'react';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        // backgroundColor: 'white',\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        width: '100%',\r\n        borderTop: '1px solid lightgray',\r\n        marginTop: theme.spacing(3),\r\n        padding: 15,\r\n        boxSizing: \"border-box\",\r\n        color: 'white'\r\n    }\r\n}));\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\">\r\n            {'Â© '}{new Date().getFullYear()}{' '} TDIII Group, LLC\r\n        </Typography>\r\n    );\r\n}\r\n\r\n\r\nconst Footer = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <footer className={classes.root}>\r\n            <Typography>Uncommon Questions</Typography>\r\n            <Copyright/>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from \"react\";\nimport './App.css';\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Footer from \"./components/layout/Footer\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: '#282c34',\n        display: 'flex',\n        minHeight: '100vh',\n        flexDirection: 'column',\n        textAlign: 'center'\n    }\n}));\n\nfunction App() {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <header>\n                {/*<img src={logo} className=\"App-logo\" alt=\"logo\"/>*/}\n                {/*<p>*/}\n                {/*    A neutral and objective source of people's opinions on some of the country's hottest topics.*/}\n                {/*</p>*/}\n            </header>\n            <section>\n                <Navbar/>\n                <Landing/>\n                <Footer/>\n            </section>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}